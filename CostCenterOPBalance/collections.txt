[Collection:CC_Ledgers]

	Type		:	Ledgers
	
	Compute		:	CCName			:	$$LoopCollObj:$Name
	Compute		:	CCClosing		:	$$BaseValue:$$CCClosing:$$LoopCollObj:$Name
	Compute		:	CCClosingNum	:	If $$IsDr:@@CC_CCClosing then -$$Number:@@CC_CCClosing else $$Number:@@CC_CCClosing
	
	Fetch		:	Name, ClosingBalance
	
	Filter		:	AffectsCC, UsedOnly
	
;Select $Name, $Parent, $ClosingBalance from CC_Ledgers

[Collection:CC_CostCentres]
	Type		:	Costcentres
	
	Fetch		:	Name
	
	Filter		:	UsedOnly
;Select $Name, $Parent, $ClosingBalance from CC_CostCentres

[Collection:CC_LedgerCCs]
	Collection	:	CC_Ledgers:CC_CostCentres
	
	Fetch		:	*
	
;Select $Name, $CCName, $ClosingBalance, $CCClosing from CC_LedgerCCs
	
[Collection:CC_LedCCs]
	Source Collection	:	CC_LedgerCCs
	
	Fetch		:	*
	
	Filter		:	NotEmptyCCClosing
	
	Compute		:	CCOpening		:	$$CollectionFieldByKey:$Amount:@@CC_CCSearchKey:CC_LedOpeningCC
	
	Sort		:	@@Default		:	$Name, $CCName
	
;Select $Name, $CCName, $ClosingBalance, $CCClosing, $CCClosingNum from CC_LedCCs

[Collection:CC_ExcelSrc]
	ODBC		:	"Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DBQ=" + ##CC_ImportPath
    SQL			:	"Select * From [Cost Centre Closing$]"

	Fetch		:	*.*
	
    Client Only	:	Yes
	Keep Source	:	().
	
	Filter		:	CC_NotIsEmpty123
	
[Collection:CC_CCLedgers]
	Source Collection		:	CC_ExcelSrc
	
	By			:	LedgerName		:	$_1
	
	Aggr Compute:	Amount			:	Sum		:	$$AsAmount:$_3
	
	Client Only	:	Yes
	Keep Source	:	().
	
[Collection:CC_CCNames]
	Use			:	CC_CCLedgers
	
	By			:	CCName			:	$_2
	
	Filter		:	CC_IsSameLedger

[Collection:CC_LedOpeningCC]
	Source Collection		:	CC_Ledgers

	Walk		:	SB_CC_OP_LedOpBalAg
	
	By			:	Name	:	$Name
	By			:	CCName	:	$SB_CC_OP_LedCCName
	Aggr Compute:	Amount	:	Sum		:	$SB_CC_OP_LedOpAmnt
	
	Search Key	:	$$Sprintf:"%s-%s":$Name:$CCName
	
;Select $Name, $CCName, $Amount from CC_LedOpeningCC